name: transcendence-stack
services:
  # --- Backend microservices (internal only) ---
  user-service:
    build:
      context: .
      dockerfile: Dockerfile-prod
      target: service
      args:
        SERVICE_NAME: user-service
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - user_avatars:/workspace/media/avatars
      - user_data:/workspace/database
    expose: ['3000']
    restart: unless-stopped

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile-prod
      target: service
      args:
        SERVICE_NAME: auth-service
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - auth_data:/workspace/database
    expose: ['3000']
    restart: unless-stopped
    depends_on:
      - user-service

  score-service:
    build:
      context: .
      dockerfile: Dockerfile-prod
      target: service
      args:
        SERVICE_NAME: score-service
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - score_data:/workspace/database
    expose: ['3000']
    restart: unless-stopped

  # --- Caddy reverse proxy + HTTPS ---
  gateway:
    build:
      context: .
      dockerfile: Dockerfile-gateway
      args:
        VITE_USER_SERVICE_URL: ${VITE_USER_SERVICE_URL}
        VITE_AUTH_SERVICE_URL: ${VITE_AUTH_SERVICE_URL}
        VITE_SCORE_SERVICE_URL: ${VITE_SCORE_SERVICE_URL}
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - user-service
      - auth-service
      - score-service
    volumes:
      - caddy_data:/data
      - caddy_config:/config

volumes:
  user_avatars:
  user_data:
  auth_data:
  score_data:
  caddy_data:
  caddy_config:
  web_build:
